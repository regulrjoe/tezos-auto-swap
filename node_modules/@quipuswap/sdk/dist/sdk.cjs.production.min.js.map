{"version":3,"file":"sdk.cjs.production.min.js","sources":["../node_modules/regenerator-runtime/runtime.js","../src/helpers.ts","../src/contracts/dex.ts","../src/contracts/factory.ts","../src/contracts/fa1_2.ts","../src/contracts/fa2.ts","../src/estimates.ts","../src/defaults.ts","../src/core.ts"],"sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","import BigNumber from \"bignumber.js\";\nimport { TezosToolkit, Signer, OpKind } from \"@taquito/taquito\";\nimport {\n  OperationOptions,\n  Batch,\n  TransferParams,\n  Token,\n  FA2Token,\n  Asset,\n  ContractOrAddress,\n} from \"./types\";\n\nexport function fromOpOpts(\n  tezValue: BigNumber.Value = 0,\n  opts: OperationOptions = {}\n) {\n  return {\n    mutez: true,\n    amount: tezValue,\n    ...opts,\n  } as any;\n}\n\nexport function batchify<B extends Batch>(\n  batch: B,\n  transfers: TransferParams[]\n): B {\n  for (const tParams of transfers) {\n    batch.withTransfer(tParams);\n  }\n  return batch;\n}\n\nexport function estimateTransfers(\n  tezos: TezosToolkit,\n  transfers: TransferParams[]\n) {\n  return tezos.estimate.batch(\n    transfers.map((tParams) => ({ kind: OpKind.TRANSACTION, ...tParams }))\n  );\n}\n\nexport async function toContract(\n  tezos: TezosToolkit,\n  contractOrAddress: ContractOrAddress\n) {\n  return typeof contractOrAddress === \"string\"\n    ? tezos.contract.at(contractOrAddress)\n    : contractOrAddress;\n}\n\nexport function toContractAddress(contractOrAddress: ContractOrAddress) {\n  return typeof contractOrAddress === \"string\"\n    ? contractOrAddress\n    : contractOrAddress.address;\n}\n\nexport function isFA2Token(token: Token): token is FA2Token {\n  return typeof token.id !== \"undefined\";\n}\n\nexport function isTezAsset(asset: Asset): asset is \"tez\" {\n  return asset === \"tez\";\n}\n\nexport function isTokenAsset(asset: Asset): asset is Token {\n  return asset !== \"tez\";\n}\n\nexport function assertNat(val: BigNumber) {\n  if (!val.isInteger() || val.isNegative()) {\n    throw new Error(\"Value is not non-negative natural number\");\n  }\n}\n\nexport class ReadOnlySigner implements Signer {\n  constructor(private pkh: string, private pk: string) {}\n\n  async publicKeyHash() {\n    return this.pkh;\n  }\n  async publicKey() {\n    return this.pk;\n  }\n  async secretKey(): Promise<string> {\n    throw new Error(\"Secret key cannot be exposed\");\n  }\n  async sign(): Promise<{\n    bytes: string;\n    sig: string;\n    prefixSig: string;\n    sbytes: string;\n  }> {\n    throw new Error(\"Cannot sign\");\n  }\n}\n","import BigNumber from \"bignumber.js\";\nimport { Contract, OperationOptions } from \"../types\";\nimport { fromOpOpts } from \"../helpers\";\n\nexport function initializeExchange(\n  dex: Contract,\n  tokenValue: BigNumber.Value,\n  tezValue: BigNumber.Value,\n  opts?: OperationOptions\n) {\n  return dex.methods\n    .initializeExchange(tokenValue)\n    .toTransferParams(fromOpOpts(tezValue, opts));\n}\n\nexport function tezToTokenPayment(\n  dex: Contract,\n  tezValue: BigNumber.Value,\n  tokenValueMin: BigNumber.Value,\n  receiver: string,\n  opts?: OperationOptions\n) {\n  return dex.methods\n    .tezToTokenPayment(tokenValueMin, receiver)\n    .toTransferParams(fromOpOpts(tezValue, opts));\n}\n\nexport function tokenToTezPayment(\n  dex: Contract,\n  tokenValue: BigNumber.Value,\n  tezValueMin: BigNumber.Value,\n  receiver: string,\n  opts?: OperationOptions\n) {\n  return dex.methods\n    .tokenToTezPayment(tokenValue, tezValueMin, receiver)\n    .toTransferParams(fromOpOpts(undefined, opts));\n}\n\nexport function withdrawProfit(\n  dex: Contract,\n  receiver: string,\n  opts?: OperationOptions\n) {\n  return dex.methods\n    .withdrawProfit(receiver)\n    .toTransferParams(fromOpOpts(undefined, opts));\n}\n\nexport function investLiquidity(\n  dex: Contract,\n  tokenValue: BigNumber.Value,\n  tezValue: BigNumber.Value,\n  opts?: OperationOptions\n) {\n  return dex.methods\n    .investLiquidity(tokenValue)\n    .toTransferParams(fromOpOpts(tezValue, opts));\n}\n\nexport function divestLiquidity(\n  dex: Contract,\n  shares: BigNumber.Value,\n  tokenValueMin: BigNumber.Value,\n  tezValueMin: BigNumber.Value,\n  opts?: OperationOptions\n) {\n  return dex.methods\n    .investLiquidity(tezValueMin, tokenValueMin, shares)\n    .toTransferParams(fromOpOpts(undefined, opts));\n}\n\nexport function vote(\n  dex: Contract,\n  voter: string,\n  baker: string,\n  shares: BigNumber.Value,\n  opts?: OperationOptions\n) {\n  return dex.methods\n    .vote(baker, shares, voter)\n    .toTransferParams(fromOpOpts(undefined, opts));\n}\n\nexport function veto(\n  dex: Contract,\n  voter: string,\n  shares: BigNumber.Value,\n  opts?: OperationOptions\n) {\n  return dex.methods\n    .veto(shares, voter)\n    .toTransferParams(fromOpOpts(undefined, opts));\n}\n","import BigNumber from \"bignumber.js\";\nimport { Contract, Token, OperationOptions } from \"../types\";\nimport { fromOpOpts, isFA2Token, toContractAddress } from \"../helpers\";\n\nexport function launchExchange(\n  factory: Contract,\n  token: Token,\n  tokenValue: BigNumber.Value,\n  tezValue: BigNumber.Value,\n  opts?: OperationOptions\n) {\n  const tokenAddress = toContractAddress(token.contract);\n\n  return factory.methods\n    .launchExchange(\n      ...(isFA2Token(token) ? [tokenAddress, token.id] : [tokenAddress]),\n      tokenValue\n    )\n    .toTransferParams(fromOpOpts(tezValue, opts));\n}\n","import BigNumber from \"bignumber.js\";\nimport { Contract, OperationOptions } from \"../types\";\nimport { fromOpOpts } from \"../helpers\";\n\nexport enum Errors {\n  NotEnoughBalance = \"NotEnoughBalance\",\n  NotEnoughAllowance = \"NotEnoughAllowance\",\n  UnsafeAllowanceChange = \"UnsafeAllowanceChange\",\n}\n\nexport function transfer(\n  fa1_2: Contract,\n  from: string,\n  to: string,\n  value: BigNumber.Value,\n  opts?: OperationOptions\n) {\n  return fa1_2.methods\n    .transfer(from, to, value)\n    .toTransferParams(fromOpOpts(undefined, opts));\n}\n\nexport function approve(\n  fa1_2: Contract,\n  spender: string,\n  value: BigNumber.Value,\n  opts?: OperationOptions\n) {\n  return fa1_2.methods\n    .approve(spender, value)\n    .toTransferParams(fromOpOpts(undefined, opts));\n}\n","import {\n  Contract,\n  OperationOptions,\n  FA2TransferParams,\n  FA2UpdateOperatorsParams,\n} from \"../types\";\nimport { fromOpOpts } from \"../helpers\";\n\nexport enum Errors {\n  TokenUndefined = \"FA2_TOKEN_UNDEFINED\",\n  InsufficientBalance = \"FA2_INSUFFICIENT_BALANCE\",\n  TxDenied = \"FA2_TX_DENIED\",\n  NotOwner = \"FA2_NOT_OWNER\",\n  NotOperator = \"FA2_NOT_OPERATOR\",\n  OperatorsUnsupported = \"FA2_OPERATORS_UNSUPPORTED\",\n  ReceiverHookFailed = \"FA2_RECEIVER_HOOK_FAILED\",\n  SenderHookFailed = \"FA2_SENDER_HOOK_FAILED\",\n  ReceiverHookUndefined = \"FA2_RECEIVER_HOOK_UNDEFINED\",\n  SenderHookUndefined = \"FA2_SENDER_HOOK_UNDEFINED\",\n}\n\nexport function transfer(\n  fa2: Contract,\n  transfers: FA2TransferParams[],\n  opts?: OperationOptions\n) {\n  return fa2.methods\n    .transfer(\n      optimizeTransfersFrom(transfers).map(([from, txs]) => ({\n        from_: from,\n        txs: txs.map(({ tokenId, to, value }) => ({\n          token_id: tokenId,\n          to_: to,\n          amount: value,\n        })),\n      }))\n    )\n    .toTransferParams(fromOpOpts(undefined, opts));\n}\n\nexport function updateOperators(\n  fa2: Contract,\n  updates: FA2UpdateOperatorsParams[],\n  opts?: OperationOptions\n) {\n  return fa2.methods\n    .update_operators(\n      updates.map(({ type, tokenId, from, to }) => ({\n        [type]: {\n          token_id: tokenId,\n          owner: from,\n          operator: to,\n        },\n      }))\n    )\n    .toTransferParams(fromOpOpts(undefined, opts));\n}\n\nfunction optimizeTransfersFrom(transfers: FA2TransferParams[]) {\n  const tMap = new Map<string, [Omit<FA2TransferParams, \"from\">]>();\n  for (const { from, ...rest } of transfers) {\n    if (tMap.has(from)) {\n      tMap.get(from)!.push(rest);\n    } else {\n      tMap.set(from, [rest]);\n    }\n  }\n  return Array.from(tMap);\n}\n","import BigNumber from \"bignumber.js\";\nimport { assertNat } from \"./helpers\";\nimport { FEE_FACTOR } from \"./defaults\";\n\nexport function estimateTezToToken(\n  dexStorage: any,\n  tezValue: BigNumber.Value\n): BigNumber {\n  const tezValueBN = new BigNumber(tezValue);\n  assertNat(tezValueBN);\n  if (tezValueBN.isZero()) return new BigNumber(0);\n\n  const tezInWithFee = new BigNumber(tezValue).times(FEE_FACTOR);\n  const numerator = tezInWithFee.times(dexStorage.storage.token_pool);\n  const denominator = new BigNumber(dexStorage.storage.tez_pool)\n    .times(1000)\n    .plus(tezInWithFee);\n  return numerator.idiv(denominator);\n}\n\nexport function estimateTokenToTez(\n  dexStorage: any,\n  tokenValue: BigNumber.Value\n) {\n  const tokenValueBN = new BigNumber(tokenValue);\n  assertNat(tokenValueBN);\n  if (tokenValueBN.isZero()) return new BigNumber(0);\n\n  const tokenInWithFee = new BigNumber(tokenValue).times(FEE_FACTOR);\n  const numerator = tokenInWithFee.times(dexStorage.storage.tez_pool);\n  const denominator = new BigNumber(dexStorage.storage.token_pool)\n    .times(1000)\n    .plus(tokenInWithFee);\n  return numerator.idiv(denominator);\n}\n\nexport function estimateTezToTokenInverse(\n  dexStorage: any,\n  tokenValue: BigNumber.Value\n) {\n  const tokenValueBN = new BigNumber(tokenValue);\n  assertNat(tokenValueBN);\n  if (tokenValueBN.isZero()) return new BigNumber(0);\n\n  const numerator = new BigNumber(dexStorage.storage.tez_pool)\n    .times(1000)\n    .times(tokenValue);\n  const denominator = new BigNumber(dexStorage.storage.token_pool)\n    .minus(tokenValue)\n    .times(FEE_FACTOR);\n  return numerator.idiv(denominator).plus(1);\n}\n\nexport function estimateTokenToTezInverse(\n  dexStorage: any,\n  tezValue: BigNumber.Value\n) {\n  const tezValueBN = new BigNumber(tezValue);\n  assertNat(tezValueBN);\n  if (tezValueBN.isZero()) return new BigNumber(0);\n\n  const numerator = new BigNumber(dexStorage.storage.token_pool)\n    .times(1000)\n    .times(tezValue);\n  const denominator = new BigNumber(dexStorage.storage.tez_pool)\n    .minus(tezValue)\n    .times(FEE_FACTOR);\n  return numerator.idiv(denominator).plus(1);\n}\n\nexport function estimateSharesInTez(\n  dexStorage: any,\n  tezValue: BigNumber.Value\n) {\n  const tezValueBN = new BigNumber(tezValue);\n  assertNat(tezValueBN);\n  if (tezValueBN.isZero()) return new BigNumber(0);\n\n  return tezValueBN\n    .times(dexStorage.storage.total_supply)\n    .idiv(dexStorage.storage.tez_pool);\n}\n\nexport function estimateSharesInToken(\n  dexStorage: any,\n  tokenValue: BigNumber.Value\n) {\n  const tokenValueBN = new BigNumber(tokenValue);\n  assertNat(tokenValueBN);\n  if (tokenValueBN.isZero()) return new BigNumber(0);\n\n  return tokenValueBN\n    .times(dexStorage.storage.total_supply)\n    .idiv(dexStorage.storage.token_pool);\n}\n\nexport function estimateTezInShares(dexStorage: any, shares: BigNumber.Value) {\n  const sharesBN = new BigNumber(shares);\n  assertNat(sharesBN);\n  if (sharesBN.isZero()) return new BigNumber(0);\n\n  return sharesBN\n    .times(dexStorage.storage.tez_pool)\n    .idiv(dexStorage.storage.total_supply);\n}\n\nexport function estimateTokenInShares(\n  dexStorage: any,\n  shares: BigNumber.Value\n) {\n  const sharesBN = new BigNumber(shares);\n  assertNat(sharesBN);\n  if (sharesBN.isZero()) return new BigNumber(0);\n\n  return sharesBN\n    .times(dexStorage.storage.token_pool)\n    .idiv(dexStorage.storage.total_supply);\n}\n\nexport function estimateTokenInTez(dexStorage: any, tezValue: BigNumber.Value) {\n  const tezValueBN = new BigNumber(tezValue);\n  assertNat(tezValueBN);\n  if (tezValueBN.isZero()) return new BigNumber(0);\n\n  return tezValueBN\n    .times(dexStorage.storage.token_pool)\n    .idiv(dexStorage.storage.tez_pool);\n}\n\nexport function estimateTezInToken(\n  dexStorage: any,\n  tokenValue: BigNumber.Value\n) {\n  const tokenValueBN = new BigNumber(tokenValue);\n  assertNat(tokenValueBN);\n  if (tokenValueBN.isZero()) return new BigNumber(0);\n\n  return tokenValueBN\n    .times(dexStorage.storage.tez_pool)\n    .idiv(dexStorage.storage.token_pool);\n}\n","export const FEE_FACTOR = 997;\nexport const VETO_PERIOD = 7889229;\nexport const VOTING_PERIOD = 2592000;\nexport const ACCURANCY_MULTIPLIER = 1000000000000000;\n","import BigNumber from \"bignumber.js\";\nimport { TezosToolkit } from \"@taquito/taquito\";\nimport {\n  Asset,\n  Token,\n  Factories,\n  TransferParams,\n  Contract,\n  ContractOrAddress,\n} from \"./types\";\nimport {\n  isFA2Token,\n  isTezAsset,\n  isTokenAsset,\n  toContract,\n  toContractAddress,\n  estimateTransfers,\n} from \"./helpers\";\nimport { Factory, Dex, FA1_2, FA2 } from \"./contracts\";\nimport {\n  estimateTokenInTez,\n  estimateTezInToken,\n  estimateTezInShares,\n  estimateTezToToken,\n  estimateTokenInShares,\n  estimateTokenToTez,\n  estimateTezToTokenInverse,\n  estimateTokenToTezInverse,\n} from \"./estimates\";\nimport { ACCURANCY_MULTIPLIER, VOTING_PERIOD } from \"./defaults\";\n\nexport async function swap(\n  tezos: TezosToolkit,\n  factories: Factories,\n  fromAsset: Asset,\n  toAsset: Asset,\n  value: BigNumber.Value,\n  slippageTolerance: BigNumber.Value = 0,\n  toAccount?: string\n) {\n  const fromAccount = await tezos.signer.publicKeyHash();\n  if (!toAccount) toAccount = fromAccount;\n\n  if (isTezAsset(fromAsset) && isTokenAsset(toAsset)) {\n    const dex = await findDex(tezos, factories, toAsset);\n    const dexStorage = await dex.storage();\n    const valueToMin = withSlippage(\n      estimateTezToToken(dexStorage, value),\n      slippageTolerance\n    );\n\n    return [Dex.tezToTokenPayment(dex, value, valueToMin, toAccount)];\n  } else if (isTokenAsset(fromAsset) && isTezAsset(toAsset)) {\n    const dex = await findDex(tezos, factories, fromAsset);\n    const dexStorage = await dex.storage();\n    const valueToMin = withSlippage(\n      estimateTokenToTez(dexStorage, value),\n      slippageTolerance\n    );\n\n    return withTokenApprove(tezos, fromAsset, fromAccount, dex.address, value, [\n      Dex.tokenToTezPayment(dex, value, valueToMin, toAccount),\n    ]);\n  } else if (isTokenAsset(fromAsset) && isTokenAsset(toAsset)) {\n    const halfSlippageTolerance = new BigNumber(1).minus(\n      new BigNumber(1).minus(slippageTolerance).sqrt()\n    );\n\n    const [inputDex, outputDex] = await Promise.all([\n      findDex(tezos, factories, fromAsset),\n      findDex(tezos, factories, toAsset),\n    ]);\n\n    const [inputDexStorage, outputDexStorage] = await Promise.all([\n      inputDex.storage(),\n      outputDex.storage(),\n    ]);\n\n    const intermediateValueToMin = withSlippage(\n      estimateTokenToTez(inputDexStorage, value),\n      halfSlippageTolerance\n    );\n    const finalValueToMin = withSlippage(\n      estimateTezToToken(outputDexStorage, intermediateValueToMin),\n      halfSlippageTolerance\n    );\n\n    return withTokenApprove(\n      tezos,\n      fromAsset,\n      fromAccount,\n      inputDex.address,\n      value,\n      [\n        Dex.tokenToTezPayment(\n          inputDex,\n          value,\n          intermediateValueToMin,\n          fromAccount\n        ),\n        Dex.tezToTokenPayment(\n          outputDex,\n          intermediateValueToMin,\n          finalValueToMin,\n          toAccount\n        ),\n      ]\n    );\n  } else {\n    throw new Error(\"Unsupported exchange way\");\n  }\n}\n\nexport async function estimateSwap(\n  tezos: TezosToolkit,\n  factories: Factories,\n  fromAsset: Asset,\n  toAsset: Asset,\n  values: { inputValue: BigNumber.Value } | { outputValue: BigNumber.Value }\n) {\n  if (isTezAsset(fromAsset) && isTokenAsset(toAsset)) {\n    const dex = await findDex(tezos, factories, toAsset);\n    const dexStorage = await dex.storage();\n\n    return \"outputValue\" in values\n      ? estimateTezToTokenInverse(dexStorage, values.outputValue)\n      : estimateTezToToken(dexStorage, values.inputValue);\n  } else if (isTokenAsset(fromAsset) && isTezAsset(toAsset)) {\n    const dex = await findDex(tezos, factories, fromAsset);\n    const dexStorage = await dex.storage();\n\n    return \"outputValue\" in values\n      ? estimateTokenToTezInverse(dexStorage, values.outputValue)\n      : estimateTokenToTez(dexStorage, values.inputValue);\n  } else if (isTokenAsset(fromAsset) && isTokenAsset(toAsset)) {\n    const [inputDex, outputDex] = await Promise.all([\n      findDex(tezos, factories, fromAsset),\n      findDex(tezos, factories, toAsset),\n    ]);\n\n    const [inputDexStorage, outputDexStorage] = await Promise.all([\n      inputDex.storage(),\n      outputDex.storage(),\n    ]);\n\n    if (\"outputValue\" in values) {\n      const intermediateTezValue = estimateTezToTokenInverse(\n        outputDexStorage,\n        values.outputValue\n      );\n      return estimateTokenToTezInverse(inputDexStorage, intermediateTezValue);\n    } else {\n      const intermediateTezValue = estimateTokenToTez(\n        inputDexStorage,\n        values.inputValue\n      );\n      return estimateTezToToken(outputDexStorage, intermediateTezValue);\n    }\n  } else {\n    throw new Error(\"Unsupported exchange way\");\n  }\n}\n\nexport async function initializeLiquidity(\n  tezos: TezosToolkit,\n  factories: Factories,\n  token: Token,\n  tokenValue: BigNumber.Value,\n  tezValue: BigNumber.Value\n) {\n  const dex = await findDexNonStrict(tezos, factories, token);\n  if (dex && (await isDexContainsLiquidity(dex))) {\n    throw new DexAlreadyContainsLiquidity();\n  }\n\n  const fromAccount = await tezos.signer.publicKeyHash();\n\n  if (dex) {\n    return withTokenApprove(\n      tezos,\n      token,\n      fromAccount,\n      dex.address,\n      tokenValue,\n      [Dex.initializeExchange(dex, tokenValue, tezValue)]\n    );\n  } else {\n    const factory = await toContract(\n      tezos,\n      isFA2Token(token) ? factories.fa2Factory : factories.fa1_2Factory\n    );\n\n    return withTokenApprove(\n      tezos,\n      token,\n      fromAccount,\n      factory.address,\n      tokenValue,\n      [Factory.launchExchange(factory, token, tokenValue, tezValue)]\n    );\n  }\n}\n\nexport async function addLiquidity(\n  tezos: TezosToolkit,\n  dex: ContractOrAddress,\n  values:\n    | { tokenValue: BigNumber.Value; tezValue: BigNumber.Value }\n    | { tokenValue: BigNumber.Value }\n    | { tezValue: BigNumber.Value }\n) {\n  const dexContract = await toContract(tezos, dex);\n  if (!(await isDexContainsLiquidity(dexContract))) {\n    throw new DexNotContainsLiquidity();\n  }\n\n  const dexStorage = await dexContract.storage();\n  const token = getDexToken(dexStorage);\n\n  let tokenValue: BigNumber.Value;\n  let tezValue: BigNumber.Value;\n  if (\"tokenValue\" in values && \"tezValue\" in values) {\n    tokenValue = values.tokenValue;\n    tezValue = values.tezValue;\n  } else if (\"tokenValue\" in values) {\n    tokenValue = values.tokenValue;\n    tezValue = estimateTezInToken(dexStorage, tokenValue);\n  } else {\n    tezValue = values.tezValue;\n    tokenValue = estimateTokenInTez(dexStorage, tezValue);\n  }\n\n  const fromAccount = await tezos.signer.publicKeyHash();\n\n  return withTokenApprove(\n    tezos,\n    token,\n    fromAccount,\n    dexContract.address,\n    tokenValue,\n    [\n      Dex.investLiquidity(dexContract, tokenValue, tezValue),\n      Dex.withdrawProfit(dexContract, fromAccount),\n    ]\n  );\n}\n\nexport async function removeLiquidity(\n  tezos: TezosToolkit,\n  dex: ContractOrAddress,\n  lpTokenValue: BigNumber.Value,\n  slippageTolerance: BigNumber.Value\n) {\n  const dexContract = await toContract(tezos, dex);\n  const dexStorage = await dexContract.storage();\n  const lpToken = toLPToken(dexContract, dexStorage);\n\n  const tokenValueMin = withSlippage(\n    estimateTokenInShares(dexStorage, lpTokenValue),\n    slippageTolerance\n  );\n  const tezValueMin = withSlippage(\n    estimateTezInShares(dexStorage, lpTokenValue),\n    slippageTolerance\n  );\n\n  const fromAccount = await tezos.signer.publicKeyHash();\n\n  return withTokenApprove(\n    tezos,\n    lpToken,\n    fromAccount,\n    dexContract.address,\n    lpTokenValue,\n    [Dex.divestLiquidity(dexContract, lpTokenValue, tokenValueMin, tezValueMin)]\n  );\n}\n\nexport async function getLiquidityShare(\n  tezos: TezosToolkit,\n  dex: ContractOrAddress,\n  account: string\n) {\n  const dexContract = await toContract(tezos, dex);\n  const dexStorage = await dexContract.storage<any>();\n  const val = await dexStorage.storage.ledger.get(account);\n  if (!val) {\n    return {\n      unfrozen: new BigNumber(0),\n      frozen: new BigNumber(0),\n      total: new BigNumber(0),\n    };\n  }\n\n  const unfrozen = new BigNumber(val.balance);\n  const frozen = new BigNumber(val.frozen_balance);\n  return {\n    unfrozen,\n    frozen,\n    total: unfrozen.plus(frozen),\n  };\n}\n\nexport async function estimateReward(\n  tezos: TezosToolkit,\n  dex: ContractOrAddress,\n  account: string\n) {\n  const dexContract = await toContract(tezos, dex);\n  const { storage } = await dexContract.storage<any>();\n  const [rewards, shares] = await Promise.all([\n    storage.user_rewards.get(account),\n    storage.ledger.get(account),\n  ]);\n\n  let reward = new BigNumber(rewards?.reward ?? 0);\n  if (shares) {\n    const now = new Date();\n    const periodFinish = new Date(storage.period_finish);\n    const lastUpdateTime = new Date(storage.last_update_time);\n    const rewardsTime = now > periodFinish ? periodFinish : now;\n    let newReward = new BigNumber(Math.abs(+rewardsTime - +lastUpdateTime))\n      .idiv(1000)\n      .times(storage.reward_per_sec);\n\n    if (now > periodFinish) {\n      const periodsDuration = new BigNumber(+now - +periodFinish)\n        .idiv(1000)\n        .idiv(VOTING_PERIOD)\n        .plus(1)\n        .times(VOTING_PERIOD);\n      const rewardPerSec = new BigNumber(storage.reward)\n        .times(ACCURANCY_MULTIPLIER)\n        .idiv(periodsDuration.abs());\n      newReward = new BigNumber(+now - +periodFinish)\n        .idiv(1000)\n        .abs()\n        .times(rewardPerSec);\n    }\n\n    const rewardPerShare = new BigNumber(storage.reward_per_share).plus(\n      newReward.idiv(storage.total_supply)\n    );\n    const totalShares = new BigNumber(shares.balance).plus(\n      shares.frozen_balance\n    );\n    reward = reward.plus(\n      totalShares\n        .times(rewardPerShare)\n        .minus(rewards?.reward_paid ?? 0)\n        .abs()\n    );\n  }\n\n  return reward.idiv(ACCURANCY_MULTIPLIER);\n}\n\nexport async function withdrawReward(\n  tezos: TezosToolkit,\n  dex: ContractOrAddress,\n  receiver: string\n) {\n  const dexContract = await toContract(tezos, dex);\n  return [Dex.withdrawProfit(dexContract, receiver)];\n}\n\nexport async function voteForBaker(\n  tezos: TezosToolkit,\n  dex: ContractOrAddress,\n  bakerAddress: string,\n  lpTokenValue: BigNumber.Value\n) {\n  const dexContract = await toContract(tezos, dex);\n  const dexStorage = await dexContract.storage();\n  const lpToken = toLPToken(dexContract, dexStorage);\n\n  const fromAccount = await tezos.signer.publicKeyHash();\n  const voter = fromAccount;\n\n  return withTokenApprove(\n    tezos,\n    lpToken,\n    fromAccount,\n    dexContract.address,\n    lpTokenValue,\n    [Dex.vote(dexContract, voter, bakerAddress, lpTokenValue)]\n  );\n}\n\nexport async function vetoCurrentBaker(\n  tezos: TezosToolkit,\n  dex: ContractOrAddress,\n  lpTokenValue: BigNumber.Value\n) {\n  const dexContract = await toContract(tezos, dex);\n  const dexStorage = await dexContract.storage();\n  const lpToken = toLPToken(dexContract, dexStorage);\n\n  const fromAccount = await tezos.signer.publicKeyHash();\n  const voter = fromAccount;\n\n  return withTokenApprove(\n    tezos,\n    lpToken,\n    fromAccount,\n    dexContract.address,\n    lpTokenValue,\n    [Dex.veto(dexContract, voter, lpTokenValue)]\n  );\n}\n\nexport function toLPToken(dex: ContractOrAddress, dexStorage: any): Token {\n  return {\n    contract: dex,\n    id: \"token_id\" in dexStorage.storage ? 0 : undefined,\n  };\n}\n\nexport function getDexToken(dexStorage: any): Token {\n  return {\n    contract: dexStorage.storage.token_address,\n    id: dexStorage.storage.token_id,\n  };\n}\n\nexport async function isDexExistAndContainsLiquidity(\n  tezos: TezosToolkit,\n  factories: Factories,\n  token: Token\n) {\n  const dex = await findDexNonStrict(tezos, factories, token);\n  if (!dex) return false;\n  return isDexContainsLiquidity(dex);\n}\n\nexport async function isDexContainsLiquidity(dex: Contract) {\n  const dexStorage = await dex.storage<any>();\n  return !(\n    new BigNumber(dexStorage.storage.tez_pool).isZero() ||\n    new BigNumber(dexStorage.storage.token_pool).isZero()\n  );\n}\n\nexport async function findDexNonStrict(\n  tezos: TezosToolkit,\n  factories: Factories,\n  token: Token\n) {\n  try {\n    return await findDex(tezos, factories, token);\n  } catch (err) {\n    if (err instanceof DexNotFoundError) {\n      return null;\n    }\n    throw err;\n  }\n}\n\nexport async function findDex(\n  tezos: TezosToolkit,\n  { fa1_2Factory, fa2Factory }: Factories,\n  token: Token\n): Promise<Contract> {\n  const factory = await toContract(\n    tezos,\n    isFA2Token(token) ? fa2Factory : fa1_2Factory\n  );\n  const facStorage = await factory.storage<any>();\n\n  const tokenAddress = toContractAddress(token.contract);\n  const dexAddress = await facStorage.token_to_exchange.get(\n    isFA2Token(token) ? [tokenAddress, token.id] : tokenAddress\n  );\n\n  if (!dexAddress) {\n    throw new DexNotFoundError();\n  }\n\n  return tezos.contract.at(dexAddress);\n}\n\nexport async function withTokenApprove(\n  tezos: TezosToolkit,\n  token: Token,\n  from: string,\n  to: string,\n  value: BigNumber.Value,\n  transfers: TransferParams[]\n) {\n  const tokenContract = await toContract(tezos, token.contract);\n\n  if (isFA2Token(token)) {\n    return [\n      FA2.updateOperators(tokenContract, [\n        {\n          type: \"add_operator\",\n          from,\n          to,\n          tokenId: token.id,\n        },\n      ]),\n      ...transfers,\n      FA2.updateOperators(tokenContract, [\n        {\n          type: \"remove_operator\",\n          from,\n          to,\n          tokenId: token.id,\n        },\n      ]),\n    ];\n  }\n\n  const approveParams = FA1_2.approve(tokenContract, to, value);\n\n  let resetApprove = false;\n  try {\n    await estimateTransfers(tezos, [approveParams]);\n  } catch (err) {\n    if (isUnsafeAllowanceChangeError(err)) {\n      resetApprove = true;\n    }\n  }\n\n  return resetApprove\n    ? [FA1_2.approve(tokenContract, to, 0), approveParams, ...transfers]\n    : [approveParams, ...transfers];\n}\n\nexport function isUnsafeAllowanceChangeError(err: any): boolean {\n  try {\n    return (\n      err?.message === FA1_2.Errors.UnsafeAllowanceChange ||\n      err?.errors?.some(\n        (e: any) =>\n          e?.with?.int === \"23\" ||\n          e?.with?.string === FA1_2.Errors.UnsafeAllowanceChange ||\n          e?.with?.args?.[0]?.string === FA1_2.Errors.UnsafeAllowanceChange\n      )\n    );\n  } catch {\n    return false;\n  }\n}\n\nexport function withSlippage(val: BigNumber.Value, tolerance: BigNumber.Value) {\n  return new BigNumber(val)\n    .times(new BigNumber(1).minus(tolerance))\n    .integerValue(BigNumber.ROUND_DOWN);\n}\n\n/**\n * Errors\n */\n\nexport class DexNotFoundError implements Error {\n  name = \"DexNotFoundError\";\n  message = \"Dex contract for token not found\";\n}\n\nexport class DexAlreadyContainsLiquidity implements Error {\n  name = \"DexAlreadyContainsLiquidity\";\n  message = \"Dex already contains liquidity. Use 'addLiquidity'\";\n}\n\nexport class DexNotContainsLiquidity implements Error {\n  name = \"DexNotContainsLiquidity\";\n  message = \"Dex doesn't contains liquidity. Use 'initializeLiquidity'\";\n}\n"],"names":["runtime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","generator","create","Generator","context","Context","_invoke","state","method","arg","Error","undefined","done","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","makeInvokeMethod","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","doneResult","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function","fromOpOpts","tezValue","opts","mutez","amount","estimateTransfers","tezos","transfers","estimate","batch","map","tParams","kind","OpKind","TRANSACTION","toContract","contractOrAddress","contract","at","toContractAddress","address","isFA2Token","token","id","isTezAsset","asset","isTokenAsset","assertNat","val","isInteger","isNegative","ReadOnlySigner","pkh","pk","publicKeyHash","publicKey","secretKey","sign","initializeExchange","dex","tokenValue","methods","toTransferParams","tezToTokenPayment","tokenValueMin","receiver","tokenToTezPayment","tezValueMin","withdrawProfit","investLiquidity","divestLiquidity","shares","vote","voter","baker","veto","launchExchange","factory","tokenAddress","Errors","approve","fa1_2","spender","from","to","transfer","updateOperators","fa2","updates","update_operators","token_id","tokenId","owner","operator","tMap","Map","rest","has","get","set","Array","optimizeTransfersFrom","from_","txs","to_","estimateTezToToken","dexStorage","tezValueBN","BigNumber","isZero","tezInWithFee","times","numerator","storage","token_pool","denominator","tez_pool","plus","idiv","estimateTokenToTez","tokenValueBN","tokenInWithFee","estimateTezToTokenInverse","minus","estimateTokenToTezInverse","estimateTezInShares","sharesBN","total_supply","estimateTokenInShares","estimateTokenInTez","estimateTezInToken","factories","fromAsset","toAsset","slippageTolerance","toAccount","signer","fromAccount","findDex","valueToMin","withSlippage","Dex","withTokenApprove","halfSlippageTolerance","sqrt","all","inputDex","outputDex","outputDexStorage","intermediateValueToMin","finalValueToMin","outputValue","inputValue","inputDexStorage","intermediateTezValue","findDexNonStrict","isDexContainsLiquidity","DexAlreadyContainsLiquidity","fa2Factory","fa1_2Factory","Factory","dexContract","DexNotContainsLiquidity","getDexToken","lpTokenValue","lpToken","toLPToken","account","ledger","unfrozen","frozen","total","balance","frozen_balance","user_rewards","reward","rewards","now","Date","periodFinish","period_finish","lastUpdateTime","last_update_time","newReward","Math","abs","reward_per_sec","periodsDuration","rewardPerSec","rewardPerShare","reward_per_share","totalShares","reward_paid","bakerAddress","token_address","_context13","DexNotFoundError","facStorage","token_to_exchange","dexAddress","tokenContract","FA2","approveParams","FA1_2","resetApprove","isUnsafeAllowanceChangeError","message","UnsafeAllowanceChange","errors","_err$errors","some","e","string","args","tolerance","integerValue","ROUND_DOWN","withTransfer"],"mappings":"wpDAOA,IAAIA,EAAW,SAAUC,GAGvB,IAAIC,EAAKC,OAAOC,UACZC,EAASH,EAAGI,eAEZC,EAA4B,mBAAXC,OAAwBA,OAAS,GAClDC,EAAiBF,EAAQG,UAAY,aACrCC,EAAsBJ,EAAQK,eAAiB,kBAC/CC,EAAoBN,EAAQO,aAAe,gBAE/C,SAASC,EAAOC,EAAKC,EAAKC,GAOxB,OANAf,OAAOgB,eAAeH,EAAKC,EAAK,CAC9BC,MAAOA,EACPE,YAAY,EACZC,cAAc,EACdC,UAAU,IAELN,EAAIC,GAEb,IAEEF,EAAO,GAAI,IACX,MAAOQ,GACPR,EAAS,SAASC,EAAKC,EAAKC,GAC1B,OAAOF,EAAIC,GAAOC,GAItB,SAASM,EAAKC,EAASC,EAASC,EAAMC,GAEpC,IACIC,EAAY1B,OAAO2B,QADFJ,GAAWA,EAAQtB,qBAAqB2B,EAAYL,EAAUK,GACtC3B,WACzC4B,EAAU,IAAIC,EAAQL,GAAe,IAMzC,OAFAC,EAAUK,QAsMZ,SAA0BT,EAASE,EAAMK,GACvC,IAAIG,EA/KuB,iBAiL3B,OAAO,SAAgBC,EAAQC,GAC7B,GAhLoB,cAgLhBF,EACF,MAAM,IAAIG,MAAM,gCAGlB,GAnLoB,cAmLhBH,EAA6B,CAC/B,GAAe,UAAXC,EACF,MAAMC,EAKR,MAoQG,CAAEnB,WAzfPqB,EAyfyBC,MAAM,GA9P/B,IAHAR,EAAQI,OAASA,EACjBJ,EAAQK,IAAMA,IAED,CACX,IAAII,EAAWT,EAAQS,SACvB,GAAIA,EAAU,CACZ,IAAIC,EAAiBC,EAAoBF,EAAUT,GACnD,GAAIU,EAAgB,CAClB,GAAIA,IAAmBE,EAAkB,SACzC,OAAOF,GAIX,GAAuB,SAAnBV,EAAQI,OAGVJ,EAAQa,KAAOb,EAAQc,MAAQd,EAAQK,SAElC,GAAuB,UAAnBL,EAAQI,OAAoB,CACrC,GAnNqB,mBAmNjBD,EAEF,MADAA,EAjNc,YAkNRH,EAAQK,IAGhBL,EAAQe,kBAAkBf,EAAQK,SAEN,WAAnBL,EAAQI,QACjBJ,EAAQgB,OAAO,SAAUhB,EAAQK,KAGnCF,EA5NkB,YA8NlB,IAAIc,EAASC,EAASzB,EAASE,EAAMK,GACrC,GAAoB,WAAhBiB,EAAOE,KAAmB,CAO5B,GAJAhB,EAAQH,EAAQQ,KAjOA,YAFK,iBAuOjBS,EAAOZ,MAAQO,EACjB,SAGF,MAAO,CACL1B,MAAO+B,EAAOZ,IACdG,KAAMR,EAAQQ,MAGS,UAAhBS,EAAOE,OAChBhB,EA/OgB,YAkPhBH,EAAQI,OAAS,QACjBJ,EAAQK,IAAMY,EAAOZ,OA9QPe,CAAiB3B,EAASE,EAAMK,GAE7CH,EAcT,SAASqB,EAASG,EAAIrC,EAAKqB,GACzB,IACE,MAAO,CAAEc,KAAM,SAAUd,IAAKgB,EAAGC,KAAKtC,EAAKqB,IAC3C,MAAOd,GACP,MAAO,CAAE4B,KAAM,QAASd,IAAKd,IAhBjCtB,EAAQuB,KAAOA,EAoBf,IAOIoB,EAAmB,GAMvB,SAASb,KACT,SAASwB,KACT,SAASC,KAIT,IAAIC,EAAoB,GACxBA,EAAkBhD,GAAkB,WAClC,OAAOiD,MAGT,IAAIC,EAAWxD,OAAOyD,eAClBC,EAA0BF,GAAYA,EAASA,EAASG,EAAO,MAC/DD,GACAA,IAA4B3D,GAC5BG,EAAOiD,KAAKO,EAAyBpD,KAGvCgD,EAAoBI,GAGtB,IAAIE,EAAKP,EAA2BpD,UAClC2B,EAAU3B,UAAYD,OAAO2B,OAAO2B,GAWtC,SAASO,EAAsB5D,GAC7B,CAAC,OAAQ,QAAS,UAAU6D,SAAQ,SAAS7B,GAC3CrB,EAAOX,EAAWgC,GAAQ,SAASC,GACjC,OAAOqB,KAAKxB,QAAQE,EAAQC,SAkClC,SAAS6B,EAAcrC,EAAWsC,GAgChC,IAAIC,EAgCJV,KAAKxB,QA9BL,SAAiBE,EAAQC,GACvB,SAASgC,IACP,OAAO,IAAIF,GAAY,SAASG,EAASC,IAnC7C,SAASC,EAAOpC,EAAQC,EAAKiC,EAASC,GACpC,IAAItB,EAASC,EAASrB,EAAUO,GAASP,EAAWQ,GACpD,GAAoB,UAAhBY,EAAOE,KAEJ,CACL,IAAIsB,EAASxB,EAAOZ,IAChBnB,EAAQuD,EAAOvD,MACnB,OAAIA,GACiB,iBAAVA,GACPb,EAAOiD,KAAKpC,EAAO,WACdiD,EAAYG,QAAQpD,EAAMwD,SAASC,MAAK,SAASzD,GACtDsD,EAAO,OAAQtD,EAAOoD,EAASC,MAC9B,SAAShD,GACViD,EAAO,QAASjD,EAAK+C,EAASC,MAI3BJ,EAAYG,QAAQpD,GAAOyD,MAAK,SAASC,GAI9CH,EAAOvD,MAAQ0D,EACfN,EAAQG,MACP,SAASI,GAGV,OAAOL,EAAO,QAASK,EAAOP,EAASC,MAvBzCA,EAAOtB,EAAOZ,KAiCZmC,CAAOpC,EAAQC,EAAKiC,EAASC,MAIjC,OAAOH,EAaLA,EAAkBA,EAAgBO,KAChCN,EAGAA,GACEA,KAkHV,SAAS1B,EAAoBF,EAAUT,GACrC,IAAII,EAASK,EAAS/B,SAASsB,EAAQI,QACvC,QA1TEG,IA0TEH,EAAsB,CAKxB,GAFAJ,EAAQS,SAAW,KAEI,UAAnBT,EAAQI,OAAoB,CAE9B,GAAIK,EAAS/B,SAAiB,SAG5BsB,EAAQI,OAAS,SACjBJ,EAAQK,SArUZE,EAsUII,EAAoBF,EAAUT,GAEP,UAAnBA,EAAQI,QAGV,OAAOQ,EAIXZ,EAAQI,OAAS,QACjBJ,EAAQK,IAAM,IAAIyC,UAChB,kDAGJ,OAAOlC,EAGT,IAAIK,EAASC,EAASd,EAAQK,EAAS/B,SAAUsB,EAAQK,KAEzD,GAAoB,UAAhBY,EAAOE,KAIT,OAHAnB,EAAQI,OAAS,QACjBJ,EAAQK,IAAMY,EAAOZ,IACrBL,EAAQS,SAAW,KACZG,EAGT,IAAImC,EAAO9B,EAAOZ,IAElB,OAAM0C,EAOFA,EAAKvC,MAGPR,EAAQS,EAASuC,YAAcD,EAAK7D,MAGpCc,EAAQiD,KAAOxC,EAASyC,QAQD,WAAnBlD,EAAQI,SACVJ,EAAQI,OAAS,OACjBJ,EAAQK,SAzXVE,GAmYFP,EAAQS,SAAW,KACZG,GANEmC,GA3BP/C,EAAQI,OAAS,QACjBJ,EAAQK,IAAM,IAAIyC,UAAU,oCAC5B9C,EAAQS,SAAW,KACZG,GAoDX,SAASuC,EAAaC,GACpB,IAAIC,EAAQ,CAAEC,OAAQF,EAAK,IAEvB,KAAKA,IACPC,EAAME,SAAWH,EAAK,IAGpB,KAAKA,IACPC,EAAMG,WAAaJ,EAAK,GACxBC,EAAMI,SAAWL,EAAK,IAGxB1B,KAAKgC,WAAWC,KAAKN,GAGvB,SAASO,EAAcP,GACrB,IAAIpC,EAASoC,EAAMQ,YAAc,GACjC5C,EAAOE,KAAO,gBACPF,EAAOZ,IACdgD,EAAMQ,WAAa5C,EAGrB,SAAShB,EAAQL,GAIf8B,KAAKgC,WAAa,CAAC,CAAEJ,OAAQ,SAC7B1D,EAAYqC,QAAQkB,EAAczB,MAClCA,KAAKoC,OAAM,GA8Bb,SAAShC,EAAOiC,GACd,GAAIA,EAAU,CACZ,IAAIC,EAAiBD,EAAStF,GAC9B,GAAIuF,EACF,OAAOA,EAAe1C,KAAKyC,GAG7B,GAA6B,mBAAlBA,EAASd,KAClB,OAAOc,EAGT,IAAKE,MAAMF,EAASG,QAAS,CAC3B,IAAIC,GAAK,EAAGlB,EAAO,SAASA,IAC1B,OAASkB,EAAIJ,EAASG,QACpB,GAAI7F,EAAOiD,KAAKyC,EAAUI,GAGxB,OAFAlB,EAAK/D,MAAQ6E,EAASI,GACtBlB,EAAKzC,MAAO,EACLyC,EAOX,OAHAA,EAAK/D,WAzeTqB,EA0eI0C,EAAKzC,MAAO,EAELyC,GAGT,OAAOA,EAAKA,KAAOA,GAKvB,MAAO,CAAEA,KAAMmB,GAIjB,SAASA,IACP,MAAO,CAAElF,WAzfPqB,EAyfyBC,MAAM,GA+MnC,OA5mBAe,EAAkBnD,UAAY2D,EAAGsC,YAAc7C,EAC/CA,EAA2B6C,YAAc9C,EACzCA,EAAkB+C,YAAcvF,EAC9ByC,EACA3C,EACA,qBAaFZ,EAAQsG,oBAAsB,SAASC,GACrC,IAAIC,EAAyB,mBAAXD,GAAyBA,EAAOH,YAClD,QAAOI,IACHA,IAASlD,GAG2B,uBAAnCkD,EAAKH,aAAeG,EAAKC,QAIhCzG,EAAQ0G,KAAO,SAASH,GAQtB,OAPIrG,OAAOyG,eACTzG,OAAOyG,eAAeJ,EAAQhD,IAE9BgD,EAAOK,UAAYrD,EACnBzC,EAAOyF,EAAQ3F,EAAmB,sBAEpC2F,EAAOpG,UAAYD,OAAO2B,OAAOiC,GAC1ByC,GAOTvG,EAAQ6G,MAAQ,SAASzE,GACvB,MAAO,CAAEqC,QAASrC,IAsEpB2B,EAAsBE,EAAc9D,WACpC8D,EAAc9D,UAAUO,GAAuB,WAC7C,OAAO+C,MAETzD,EAAQiE,cAAgBA,EAKxBjE,EAAQ8G,MAAQ,SAAStF,EAASC,EAASC,EAAMC,EAAauC,QACxC,IAAhBA,IAAwBA,EAAc6C,SAE1C,IAAIC,EAAO,IAAI/C,EACb1C,EAAKC,EAASC,EAASC,EAAMC,GAC7BuC,GAGF,OAAOlE,EAAQsG,oBAAoB7E,GAC/BuF,EACAA,EAAKhC,OAAON,MAAK,SAASF,GACxB,OAAOA,EAAOjC,KAAOiC,EAAOvD,MAAQ+F,EAAKhC,WAuKjDjB,EAAsBD,GAEtBhD,EAAOgD,EAAIlD,EAAmB,aAO9BkD,EAAGtD,GAAkB,WACnB,OAAOiD,MAGTK,EAAGmD,SAAW,WACZ,MAAO,sBAkCTjH,EAAQkH,KAAO,SAASC,GACtB,IAAID,EAAO,GACX,IAAK,IAAIlG,KAAOmG,EACdD,EAAKxB,KAAK1E,GAMZ,OAJAkG,EAAKE,UAIE,SAASpC,IACd,KAAOkC,EAAKjB,QAAQ,CAClB,IAAIjF,EAAMkG,EAAKG,MACf,GAAIrG,KAAOmG,EAGT,OAFAnC,EAAK/D,MAAQD,EACbgE,EAAKzC,MAAO,EACLyC,EAQX,OADAA,EAAKzC,MAAO,EACLyC,IAsCXhF,EAAQ6D,OAASA,EAMjB7B,EAAQ7B,UAAY,CAClBiG,YAAapE,EAEb6D,MAAO,SAASyB,GAcd,GAbA7D,KAAK8D,KAAO,EACZ9D,KAAKuB,KAAO,EAGZvB,KAAKb,KAAOa,KAAKZ,WApgBjBP,EAqgBAmB,KAAKlB,MAAO,EACZkB,KAAKjB,SAAW,KAEhBiB,KAAKtB,OAAS,OACdsB,KAAKrB,SAzgBLE,EA2gBAmB,KAAKgC,WAAWzB,QAAQ2B,IAEnB2B,EACH,IAAK,IAAIb,KAAQhD,KAEQ,MAAnBgD,EAAKe,OAAO,IACZpH,EAAOiD,KAAKI,KAAMgD,KACjBT,OAAOS,EAAKgB,MAAM,MACrBhE,KAAKgD,QAnhBXnE,IAyhBFoF,KAAM,WACJjE,KAAKlB,MAAO,EAEZ,IACIoF,EADYlE,KAAKgC,WAAW,GACLG,WAC3B,GAAwB,UAApB+B,EAAWzE,KACb,MAAMyE,EAAWvF,IAGnB,OAAOqB,KAAKmE,MAGd9E,kBAAmB,SAAS+E,GAC1B,GAAIpE,KAAKlB,KACP,MAAMsF,EAGR,IAAI9F,EAAU0B,KACd,SAASqE,EAAOC,EAAKC,GAYnB,OAXAhF,EAAOE,KAAO,QACdF,EAAOZ,IAAMyF,EACb9F,EAAQiD,KAAO+C,EAEXC,IAGFjG,EAAQI,OAAS,OACjBJ,EAAQK,SApjBZE,KAujBY0F,EAGZ,IAAK,IAAI9B,EAAIzC,KAAKgC,WAAWQ,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAId,EAAQ3B,KAAKgC,WAAWS,GACxBlD,EAASoC,EAAMQ,WAEnB,GAAqB,SAAjBR,EAAMC,OAIR,OAAOyC,EAAO,OAGhB,GAAI1C,EAAMC,QAAU5B,KAAK8D,KAAM,CAC7B,IAAIU,EAAW7H,EAAOiD,KAAK+B,EAAO,YAC9B8C,EAAa9H,EAAOiD,KAAK+B,EAAO,cAEpC,GAAI6C,GAAYC,EAAY,CAC1B,GAAIzE,KAAK8D,KAAOnC,EAAME,SACpB,OAAOwC,EAAO1C,EAAME,UAAU,GACzB,GAAI7B,KAAK8D,KAAOnC,EAAMG,WAC3B,OAAOuC,EAAO1C,EAAMG,iBAGjB,GAAI0C,GACT,GAAIxE,KAAK8D,KAAOnC,EAAME,SACpB,OAAOwC,EAAO1C,EAAME,UAAU,OAG3B,CAAA,IAAI4C,EAMT,MAAM,IAAI7F,MAAM,0CALhB,GAAIoB,KAAK8D,KAAOnC,EAAMG,WACpB,OAAOuC,EAAO1C,EAAMG,gBAU9BxC,OAAQ,SAASG,EAAMd,GACrB,IAAK,IAAI8D,EAAIzC,KAAKgC,WAAWQ,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAId,EAAQ3B,KAAKgC,WAAWS,GAC5B,GAAId,EAAMC,QAAU5B,KAAK8D,MACrBnH,EAAOiD,KAAK+B,EAAO,eACnB3B,KAAK8D,KAAOnC,EAAMG,WAAY,CAChC,IAAI4C,EAAe/C,EACnB,OAIA+C,IACU,UAATjF,GACS,aAATA,IACDiF,EAAa9C,QAAUjD,GACvBA,GAAO+F,EAAa5C,aAGtB4C,EAAe,MAGjB,IAAInF,EAASmF,EAAeA,EAAavC,WAAa,GAItD,OAHA5C,EAAOE,KAAOA,EACdF,EAAOZ,IAAMA,EAET+F,GACF1E,KAAKtB,OAAS,OACdsB,KAAKuB,KAAOmD,EAAa5C,WAClB5C,GAGFc,KAAK2E,SAASpF,IAGvBoF,SAAU,SAASpF,EAAQwC,GACzB,GAAoB,UAAhBxC,EAAOE,KACT,MAAMF,EAAOZ,IAcf,MAXoB,UAAhBY,EAAOE,MACS,aAAhBF,EAAOE,KACTO,KAAKuB,KAAOhC,EAAOZ,IACM,WAAhBY,EAAOE,MAChBO,KAAKmE,KAAOnE,KAAKrB,IAAMY,EAAOZ,IAC9BqB,KAAKtB,OAAS,SACdsB,KAAKuB,KAAO,OACa,WAAhBhC,EAAOE,MAAqBsC,IACrC/B,KAAKuB,KAAOQ,GAGP7C,GAGT0F,OAAQ,SAAS9C,GACf,IAAK,IAAIW,EAAIzC,KAAKgC,WAAWQ,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAId,EAAQ3B,KAAKgC,WAAWS,GAC5B,GAAId,EAAMG,aAAeA,EAGvB,OAFA9B,KAAK2E,SAAShD,EAAMQ,WAAYR,EAAMI,UACtCG,EAAcP,GACPzC,IAKb2F,MAAS,SAASjD,GAChB,IAAK,IAAIa,EAAIzC,KAAKgC,WAAWQ,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAId,EAAQ3B,KAAKgC,WAAWS,GAC5B,GAAId,EAAMC,SAAWA,EAAQ,CAC3B,IAAIrC,EAASoC,EAAMQ,WACnB,GAAoB,UAAhB5C,EAAOE,KAAkB,CAC3B,IAAIqF,EAASvF,EAAOZ,IACpBuD,EAAcP,GAEhB,OAAOmD,GAMX,MAAM,IAAIlG,MAAM,0BAGlBmG,cAAe,SAAS1C,EAAUf,EAAYE,GAa5C,OAZAxB,KAAKjB,SAAW,CACd/B,SAAUoD,EAAOiC,GACjBf,WAAYA,EACZE,QAASA,GAGS,SAAhBxB,KAAKtB,SAGPsB,KAAKrB,SA7rBPE,GAgsBOK,IAQJ3C,GAOsByI,EAAOzI,SAGtC,IACE0I,mBAAqB3I,EACrB,MAAO4I,GAUPC,SAAS,IAAK,yBAAdA,CAAwC7I,yCC9tB1B8I,EACdC,EACAC,mBADAD,IAAAA,EAA4B,YAC5BC,IAAAA,EAAyB,OAGvBC,OAAO,EACPC,OAAQH,GACLC,YAcSG,EACdC,EACAC,UAEOD,EAAME,SAASC,MACpBF,EAAUG,KAAI,SAACC,aAAeC,KAAMC,SAAOC,aAAgBH,gBAIzCI,sEAAf,WACLT,EACAU,2FAEoC,iBAAtBA,EACVV,EAAMW,SAASC,GAAGF,GAClBA,8EAGUG,EAAkBH,SACI,iBAAtBA,EACVA,EACAA,EAAkBI,iBAGRC,EAAWC,eACE,IAAbA,EAAMC,YAGNC,EAAWC,SACR,QAAVA,WAGOC,EAAaD,SACV,QAAVA,WAGOE,EAAUC,OACnBA,EAAIC,aAAeD,EAAIE,mBACpB,IAAItI,MAAM,4CAIpB,IAAauI,wBACSC,EAAqBC,YAArBD,UAAqBC,6BAEnCC,yCAAN,qGACStH,KAAKoH,4GAERG,qCAAN,qGACSvH,KAAKqH,2GAERG,qCAAN,kFACQ,IAAI5I,MAAM,kIAEZ6I,gCAAN,kFAMQ,IAAI7I,MAAM,6HCzFJ8I,EACdC,EACAC,EACAvC,EACAC,UAEOqC,EAAIE,QACRH,mBAAmBE,GACnBE,iBAAiB1C,EAAWC,EAAUC,aAG3ByC,EACdJ,EACAtC,EACA2C,EACAC,EACA3C,UAEOqC,EAAIE,QACRE,kBAAkBC,EAAeC,GACjCH,iBAAiB1C,EAAWC,EAAUC,aAG3B4C,EACdP,EACAC,EACAO,EACAF,EACA3C,UAEOqC,EAAIE,QACRK,kBAAkBN,EAAYO,EAAaF,GAC3CH,iBAAiB1C,OAAWvG,EAAWyG,IAG5C,SAAgB8C,EACdT,EACAM,EACA3C,UAEOqC,EAAIE,QACRO,eAAeH,GACfH,iBAAiB1C,OAAWvG,EAAWyG,IAG5C,SAAgB+C,EACdV,EACAC,EACAvC,EACAC,UAEOqC,EAAIE,QACRQ,gBAAgBT,GAChBE,iBAAiB1C,EAAWC,EAAUC,aAG3BgD,EACdX,EACAY,EACAP,EACAG,EACA7C,UAEOqC,EAAIE,QACRQ,gBAAgBF,EAAaH,EAAeO,GAC5CT,iBAAiB1C,OAAWvG,EAAWyG,aAG5BkD,EACdb,EACAc,EACAC,EACAH,EACAjD,UAEOqC,EAAIE,QACRW,KAAKE,EAAOH,EAAQE,GACpBX,iBAAiB1C,OAAWvG,EAAWyG,IAG5C,SAAgBqD,EACdhB,EACAc,EACAF,EACAjD,UAEOqC,EAAIE,QACRc,KAAKJ,EAAQE,GACbX,iBAAiB1C,OAAWvG,EAAWyG,oKCxF5BsD,EACdC,EACAnC,EACAkB,EACAvC,EACAC,SAEMwD,EAAevC,EAAkBG,EAAML,mBAEtCwC,EAAQhB,SACZe,wBACKnC,EAAWC,GAAS,CAACoC,EAAcpC,EAAMC,IAAM,CAACmC,YACpDlB,KAEDE,iBAAiB1C,EAAWC,EAAUC,QCd/ByD,sCAkBZ,SAAgBC,EACdC,EACAC,EACA1L,EACA8H,UAEO2D,EAAMpB,QACVmB,QAAQE,EAAS1L,GACjBsK,iBAAiB1C,OAAWvG,EAAWyG,KA1B5C,SAAYyD,GACVA,sCACAA,0CACAA,gDAHF,CAAYA,IAAAA,WCIAA,6DDGVE,EACAE,EACAC,EACA5L,EACA8H,UAEO2D,EAAMpB,QACVwB,SAASF,EAAMC,EAAI5L,GACnBsK,iBAAiB1C,OAAWvG,EAAWyG,gBCqB5C,SAAgBgE,EACdC,EACAC,EACAlE,UAEOiE,EAAI1B,QACR4B,iBACCD,EAAQ1D,KAAI,iCAAGrG,MACL,CACNiK,WAFiBC,QAGjBC,QAH0BT,KAI1BU,WAJgCT,UAQrCtB,iBAAiB1C,OAAWvG,EAAWyG,KA/C5C,SAAYyD,GACVA,uCACAA,iDACAA,2BACAA,2BACAA,iCACAA,mDACAA,gDACAA,4CACAA,sDACAA,kDAVF,CAAYA,IAAAA,6DAaZ,SACEQ,EACA5D,EACAL,UAEOiE,EAAI1B,QACRwB,SA+BL,SAA+B1D,aACvBmE,EAAO,IAAIC,QACepE,kBAAW,eAA9BwD,IAAAA,KAASa,gBAChBF,EAAKG,IAAId,GACXW,EAAKI,IAAIf,GAAOlH,KAAK+H,GAErBF,EAAKK,IAAIhB,EAAM,CAACa,WAGbI,MAAMjB,KAAKW,GAvCdO,CAAsB1E,GAAWG,KAAI,kBAAkB,CACrDwE,WACAC,SAASzE,KAAI,kBAA6B,CACxC4D,WADcC,QAEda,MAFuBpB,GAGvB5D,SAH2BhI,eAOhCsK,iBAAiB1C,OAAWvG,EAAWyG,iCCjC5BmF,EACdC,EACArF,OAEMsF,EAAa,IAAIC,EAAUvF,MACjC0B,EAAU4D,GACNA,EAAWE,SAAU,OAAO,IAAID,EAAU,OAExCE,EAAe,IAAIF,EAAUvF,GAAU0F,MCZrB,KDalBC,EAAYF,EAAaC,MAAML,EAAWO,QAAQC,YAClDC,EAAc,IAAIP,EAAUF,EAAWO,QAAQG,UAClDL,MAAM,KACNM,KAAKP,UACDE,EAAUM,KAAKH,YAGRI,EACdb,EACA9C,OAEM4D,EAAe,IAAIZ,EAAUhD,MACnCb,EAAUyE,GACNA,EAAaX,SAAU,OAAO,IAAID,EAAU,OAE1Ca,EAAiB,IAAIb,EAAUhD,GAAYmD,MC5BzB,KD6BlBC,EAAYS,EAAeV,MAAML,EAAWO,QAAQG,UACpDD,EAAc,IAAIP,EAAUF,EAAWO,QAAQC,YAClDH,MAAM,KACNM,KAAKI,UACDT,EAAUM,KAAKH,YAGRO,EACdhB,EACA9C,OAEM4D,EAAe,IAAIZ,EAAUhD,MACnCb,EAAUyE,GACNA,EAAaX,SAAU,OAAO,IAAID,EAAU,OAE1CI,EAAY,IAAIJ,EAAUF,EAAWO,QAAQG,UAChDL,MAAM,KACNA,MAAMnD,GACHuD,EAAc,IAAIP,EAAUF,EAAWO,QAAQC,YAClDS,MAAM/D,GACNmD,MCjDqB,YDkDjBC,EAAUM,KAAKH,GAAaE,KAAK,YAG1BO,EACdlB,EACArF,OAEMsF,EAAa,IAAIC,EAAUvF,MACjC0B,EAAU4D,GACNA,EAAWE,SAAU,OAAO,IAAID,EAAU,OAExCI,EAAY,IAAIJ,EAAUF,EAAWO,QAAQC,YAChDH,MAAM,KACNA,MAAM1F,GACH8F,EAAc,IAAIP,EAAUF,EAAWO,QAAQG,UAClDO,MAAMtG,GACN0F,MClEqB,YDmEjBC,EAAUM,KAAKH,GAAaE,KAAK,YA6B1BQ,EAAoBnB,EAAiBnC,OAC7CuD,EAAW,IAAIlB,EAAUrC,UAC/BxB,EAAU+E,GACNA,EAASjB,SAAiB,IAAID,EAAU,GAErCkB,EACJf,MAAML,EAAWO,QAAQG,UACzBE,KAAKZ,EAAWO,QAAQc,uBAGbC,EACdtB,EACAnC,OAEMuD,EAAW,IAAIlB,EAAUrC,UAC/BxB,EAAU+E,GACNA,EAASjB,SAAiB,IAAID,EAAU,GAErCkB,EACJf,MAAML,EAAWO,QAAQC,YACzBI,KAAKZ,EAAWO,QAAQc,uBAGbE,EAAmBvB,EAAiBrF,OAC5CsF,EAAa,IAAIC,EAAUvF,UACjC0B,EAAU4D,GACNA,EAAWE,SAAiB,IAAID,EAAU,GAEvCD,EACJI,MAAML,EAAWO,QAAQC,YACzBI,KAAKZ,EAAWO,QAAQG,mBAGbc,EACdxB,EACA9C,OAEM4D,EAAe,IAAIZ,EAAUhD,UACnCb,EAAUyE,GACNA,EAAaX,SAAiB,IAAID,EAAU,GAEzCY,EACJT,MAAML,EAAWO,QAAQG,UACzBE,KAAKZ,EAAWO,QAAQC,4CE5GtB,WACLxF,EACAyG,EACAC,EACAC,EACA7O,EACA8O,EACAC,gHADAD,IAAAA,EAAqC,YAGX5G,EAAM8G,OAAOlF,0BAAjCmF,SACDF,IAAWA,EAAYE,IAExB7F,EAAWwF,KAActF,EAAauF,oCACtBK,GAAQhH,EAAOyG,EAAWE,iBAAtC1E,mBACmBA,EAAIsD,yBACvB0B,EAAaC,GACjBnC,SAA+BjN,GAC/B8O,qBAGK,CAACO,EAAsBlF,EAAKnK,EAAOmP,EAAYJ,iBAC7CzF,EAAasF,KAAcxF,EAAWyF,qCAC7BK,GAAQhH,EAAOyG,EAAWC,kBAAtCzE,mBACmBA,EAAIsD,yBACvB0B,EAAaC,GACjBrB,SAA+B/N,GAC/B8O,qBAGKQ,GAAiBpH,EAAO0G,EAAWK,EAAa9E,EAAInB,QAAShJ,EAAO,CACzEqP,EAAsBlF,EAAKnK,EAAOmP,EAAYJ,kBAEvCzF,EAAasF,KAActF,EAAauF,2BAC3CU,EAAwB,IAAInC,EAAU,GAAGe,MAC7C,IAAIf,EAAU,GAAGe,MAAMW,GAAmBU,kBAGR1J,QAAQ2J,IAAI,CAC9CP,GAAQhH,EAAOyG,EAAWC,GAC1BM,GAAQhH,EAAOyG,EAAWE,oBAFrBa,gBAAUC,iBAKiC7J,QAAQ2J,IAAI,CAC5DC,EAASjC,UACTkC,EAAUlC,2BAFYmC,gBAKlBC,EAAyBT,GAC7BrB,OAAoC/N,GACpCuP,GAEIO,EAAkBV,GACtBnC,EAAmB2C,EAAkBC,GACrCN,qBAGKD,GACLpH,EACA0G,EACAK,EACAS,EAAS1G,QACThJ,EACA,CACEqP,EACEK,EACA1P,EACA6P,EACAZ,GAEFI,EACEM,EACAE,EACAC,EACAf,oBAKA,IAAI3N,MAAM,+HAIb,WACL8G,EACAyG,EACAC,EACAC,EACAjM,kGAEIwG,EAAWwF,KAActF,EAAauF,oCACtBK,GAAQhH,EAAOyG,EAAWE,iBAAtC1E,kBACmBA,EAAIsD,wBAAvBP,2BAEC,gBAAiBtK,EACpBsL,EAA0BhB,EAAYtK,EAAOmN,aAC7C9C,EAAmBC,EAAYtK,EAAOoN,yBACjC1G,EAAasF,KAAcxF,EAAWyF,qCAC7BK,GAAQhH,EAAOyG,EAAWC,kBAAtCzE,mBACmBA,EAAIsD,yBAAvBP,2BAEC,gBAAiBtK,EACpBwL,EAA0BlB,EAAYtK,EAAOmN,aAC7ChC,EAAmBb,EAAYtK,EAAOoN,yBACjC1G,EAAasF,KAActF,EAAauF,qCACb/I,QAAQ2J,IAAI,CAC9CP,GAAQhH,EAAOyG,EAAWC,GAC1BM,GAAQhH,EAAOyG,EAAWE,oBAFrBa,gBAAUC,iBAKiC7J,QAAQ2J,IAAI,CAC5DC,EAASjC,UACTkC,EAAUlC,uBAFLwC,gBAAiBL,SAKpB,gBAAiBhN,2BACbsN,EAAuBhC,EAC3B0B,EACAhN,EAAOmN,+BAEF3B,EAA0B6B,EAAiBC,mBAE5CA,EAAuBnC,EAC3BkC,EACArN,EAAOoN,8BAEF/C,EAAmB2C,EAAkBM,0CAGxC,IAAI9O,MAAM,+HAIb,WACL8G,EACAyG,EACAzF,EACAkB,EACAvC,4FAEkBsI,GAAiBjI,EAAOyG,EAAWzF,kBAA/CiB,+CACYiG,GAAuBjG,6DACjC,IAAIkG,4BAGcnI,EAAM8G,OAAOlF,2BAAjCmF,UAEF9E,4CACKmF,GACLpH,EACAgB,EACA+F,EACA9E,EAAInB,QACJoB,EACA,CAACiF,EAAuBlF,EAAKC,EAAYvC,+BAGrBc,EACpBT,EACAe,EAAWC,GAASyF,EAAU2B,WAAa3B,EAAU4B,+CAGhDjB,GACLpH,EACAgB,EACA+F,GARI5D,UASIrC,QACRoB,EACA,CAACoG,EAAuBnF,EAASnC,EAAOkB,EAAYvC,yGAKnD,WACLK,EACAiC,EACAvH,kGAK0B+F,EAAWT,EAAOiC,iBAAtCsG,kBACML,GAAuBK,0CAC3B,IAAIC,0BAGaD,EAAYhD,wBAC/BvE,EAAQyH,GADRzD,UAKF,eAAgBtK,GAAU,aAAcA,GAC1CwH,EAAaxH,EAAOwH,WACpBvC,EAAWjF,EAAOiF,UACT,eAAgBjF,EAEzBiF,EAAW6G,EAAmBxB,EAD9B9C,EAAaxH,EAAOwH,YAIpBA,EAAaqE,EAAmBvB,EADhCrF,EAAWjF,EAAOiF,oBAIMK,EAAM8G,OAAOlF,iDAEhCwF,GACLpH,EACAgB,EAJI+F,SAMJwB,EAAYzH,QACZoB,EACA,CACEiF,EAAoBoB,EAAarG,EAAYvC,GAC7CwH,EAAmBoB,EAAaxB,yGAK/B,WACL/G,EACAiC,EACAyG,EACA9B,gGAE0BnG,EAAWT,EAAOiC,iBAAtCsG,kBACmBA,EAAYhD,wBAC/BoD,EAAUC,GAAUL,EADpBvD,UAGA1C,EAAgB4E,GACpBZ,EAAsBtB,EAAY0D,GAClC9B,GAEInE,EAAcyE,GAClBf,EAAoBnB,EAAY0D,GAChC9B,aAGwB5G,EAAM8G,OAAOlF,iDAEhCwF,GACLpH,EACA2I,SAEAJ,EAAYzH,QACZ4H,EACA,CAACvB,EAAoBoB,EAAaG,EAAcpG,EAAeG,yGAI5D,WACLzC,EACAiC,EACA4G,gGAE0BpI,EAAWT,EAAOiC,iBAAtCsG,kBACmBA,EAAYhD,wBAA/BP,kBACYA,EAAWO,QAAQuD,OAAOtE,IAAIqE,aAA1CvH,mDAEG,CACLyH,SAAU,IAAI7D,EAAU,GACxB8D,OAAQ,IAAI9D,EAAU,GACtB+D,MAAO,IAAI/D,EAAU,oBAInB6D,EAAW,IAAI7D,EAAU5D,EAAI4H,SAC7BF,EAAS,IAAI9D,EAAU5D,EAAI6H,kCAC1B,CACLJ,SAAAA,EACAC,OAAAA,EACAC,MAAOF,EAASpD,KAAKqD,wGAIlB,WACLhJ,EACAiC,EACA4G,sHAE0BpI,EAAWT,EAAOiC,iBAAtCsG,kBACoBA,EAAYhD,wBAA9BA,SAAAA,iBACwB3H,QAAQ2J,IAAI,CAC1ChC,EAAQ6D,aAAa5E,IAAIqE,GACzBtD,EAAQuD,OAAOtE,IAAIqE,mBAFLhG,gBAKZwG,EAAS,IAAInE,kBALVoE,eAKoBA,EAASD,UAAU,GAC1CxG,IACI0G,EAAM,IAAIC,KACVC,EAAe,IAAID,KAAKjE,EAAQmE,eAChCC,EAAiB,IAAIH,KAAKjE,EAAQqE,kBAEpCC,EAAY,IAAI3E,EAAU4E,KAAKC,MADfR,EAAME,EAAeA,EAAeF,IACDI,IACpD/D,KAAK,KACLP,MAAME,EAAQyE,gBAEbT,EAAME,IACFQ,EAAkB,IAAI/E,GAAWqE,GAAOE,GAC3C7D,KAAK,KACLA,KDtUoB,QCuUpBD,KAAK,GACLN,MDxUoB,QCyUjB6E,EAAe,IAAIhF,EAAUK,EAAQ8D,QACxChE,MDzU2B,MC0U3BO,KAAKqE,EAAgBF,OACxBF,EAAY,IAAI3E,GAAWqE,GAAOE,GAC/B7D,KAAK,KACLmE,MACA1E,MAAM6E,IAGLC,EAAiB,IAAIjF,EAAUK,EAAQ6E,kBAAkBzE,KAC7DkE,EAAUjE,KAAKL,EAAQc,eAEnBgE,EAAc,IAAInF,EAAUrC,EAAOqG,SAASvD,KAChD9C,EAAOsG,gBAETE,EAASA,EAAO1D,KACd0E,EACGhF,MAAM8E,GACNlE,qBAAMqD,SAAAA,EAASgB,eAAe,GAC9BP,0BAIAV,EAAOzD,KD/VoB,0GCkW7B,WACL5F,EACAiC,EACAM,kFAE0B9B,EAAWT,EAAOiC,mCACrC,CAACkF,SAAgC5E,yGAGnC,WACLvC,EACAiC,EACAsI,EACA7B,4FAE0BjI,EAAWT,EAAOiC,iBAAtCsG,kBACmBA,EAAYhD,wBAC/BoD,EAAUC,GAAUL,mBAEAvI,EAAM8G,OAAOlF,gDAGhCwF,GACLpH,EACA2I,EALI5B,SAOJwB,EAAYzH,QACZ4H,EACA,CAACvB,EAASoB,EARExB,EAQkBwD,EAAc7B,2GAIzC,WACL1I,EACAiC,EACAyG,4FAE0BjI,EAAWT,EAAOiC,iBAAtCsG,kBACmBA,EAAYhD,wBAC/BoD,EAAUC,GAAUL,mBAEAvI,EAAM8G,OAAOlF,gDAGhCwF,GACLpH,EACA2I,EALI5B,SAOJwB,EAAYzH,QACZ4H,EACA,CAACvB,EAASoB,EARExB,EAQkB2B,kFAIlBE,GAAU3G,EAAwB+C,SACzC,CACLrE,SAAUsB,EACVhB,GAAI,aAAc+D,EAAWO,QAAU,OAAIpM,YAI/BsP,GAAYzD,SACnB,CACLrE,SAAUqE,EAAWO,QAAQiF,cAC7BvJ,GAAI+D,EAAWO,QAAQvB,4CAIpB,WACLhE,EACAyG,EACAzF,wFAEkBiH,GAAiBjI,EAAOyG,EAAWzF,aAA/CiB,mDACW,mCACViG,GAAuBjG,+EAGViG,wEAAf,WAAsCjG,wFAClBA,EAAIsD,4CAE3B,IAAIL,GAFAF,UAEqBO,QAAQG,UAAUP,UAC3C,IAAID,EAAUF,EAAWO,QAAQC,YAAYL,6EAIjD,SAAsB8C,4EAAf,WACLjI,EACAyG,EACAzF,2FAGegG,GAAQhH,EAAOyG,EAAWzF,gFAEnCyJ,gBAAeC,8CACV,yGAMb,SAAsB1D,4EAAf,WACLhH,IAEAgB,yFADEqH,IAAAA,aAAcD,IAAAA,oBAGM3H,EACpBT,EACAe,EAAWC,GAASoH,EAAaC,iBAF7BlF,kBAImBA,EAAQoC,wBAA3BoF,SAEAvH,EAAevC,EAAkBG,EAAML,oBACpBgK,EAAWC,kBAAkBpG,IACpDzD,EAAWC,GAAS,CAACoC,EAAcpC,EAAMC,IAAMmC,cAD3CyH,gCAKE,IAAIH,oCAGL1K,EAAMW,SAASC,GAAGiK,gFAGLzD,kFAAf,WACLpH,EACAgB,EACAyC,EACAC,EACA5L,EACAmI,4FAE4BQ,EAAWT,EAAOgB,EAAML,oBAA9CmK,UAEF/J,EAAWC,6CAEX+J,EAAoBD,EAAe,CACjC,CACE/Q,KAAM,eACN0J,KAAAA,EACAC,GAAAA,EACAO,QAASjD,EAAMC,cAGhBhB,GACH8K,EAAoBD,EAAe,CACjC,CACE/Q,KAAM,kBACN0J,KAAAA,EACAC,GAAAA,EACAO,QAASjD,EAAMC,uBAMjB+J,EAAgBC,EAAcH,EAAepH,EAAI5L,GAEnDoT,GAAe,qBAEXnL,EAAkBC,EAAO,CAACgL,8DAE5BG,WACFD,GAAe,oCAIZA,GACFD,EAAcH,EAAepH,EAAI,GAAIsH,UAAkB/K,IACvD+K,UAAkB/K,8FAGTkL,GAA6BhT,0BAGvCA,SAAAA,EAAKiT,WAAYH,EAAaI,8BAC9BlT,YAAAA,EAAKmT,eAALC,EAAaC,MACX,SAACC,uBACkB,cAAjBA,YAAAA,8BACAA,YAAAA,iBAASC,UAAWT,EAAaI,8BACjCI,YAAAA,oBAASE,kBAAO,aAAID,UAAWT,EAAaI,0BAGlD,gBACO,YAIKnE,GAAa5F,EAAsBsK,UAC1C,IAAI1G,EAAU5D,GAClB+D,MAAM,IAAIH,EAAU,GAAGe,MAAM2F,IAC7BC,aAAa3G,EAAU4G,gBAOfpB,GAAb,qBACS,gCACG,oCAGCvC,GAAb,qBACS,2CACG,sDAGCK,GAAb,qBACS,uCACG,0FDpjBwB,0KAHV,mEACC,8BACE,4BCyM7B,8FPnLErI,EACAF,iBAEsBA,kBACpBE,EAAM4L,6BAED5L,0BOiRT,qFFxOE6E,EACArF,OAEMsF,EAAa,IAAIC,EAAUvF,UACjC0B,EAAU4D,GACNA,EAAWE,SAAiB,IAAID,EAAU,GAEvCD,EACJI,MAAML,EAAWO,QAAQc,cACzBT,KAAKZ,EAAWO,QAAQG,kDAI3BV,EACA9C,OAEM4D,EAAe,IAAIZ,EAAUhD,UACnCb,EAAUyE,GACNA,EAAaX,SAAiB,IAAID,EAAU,GAEzCY,EACJT,MAAML,EAAWO,QAAQc,cACzBT,KAAKZ,EAAWO,QAAQC,ieEyL7B,yMAmJA,kLAlLA,sNA8IA,sEAvBA,8HATA"}