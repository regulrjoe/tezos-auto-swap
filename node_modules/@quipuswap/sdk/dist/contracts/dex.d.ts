import BigNumber from "bignumber.js";
import { Contract, OperationOptions } from "../types";
export declare function initializeExchange(dex: Contract, tokenValue: BigNumber.Value, tezValue: BigNumber.Value, opts?: OperationOptions): import("@taquito/taquito/dist/types/operations/types").TransferParams;
export declare function tezToTokenPayment(dex: Contract, tezValue: BigNumber.Value, tokenValueMin: BigNumber.Value, receiver: string, opts?: OperationOptions): import("@taquito/taquito/dist/types/operations/types").TransferParams;
export declare function tokenToTezPayment(dex: Contract, tokenValue: BigNumber.Value, tezValueMin: BigNumber.Value, receiver: string, opts?: OperationOptions): import("@taquito/taquito/dist/types/operations/types").TransferParams;
export declare function withdrawProfit(dex: Contract, receiver: string, opts?: OperationOptions): import("@taquito/taquito/dist/types/operations/types").TransferParams;
export declare function investLiquidity(dex: Contract, tokenValue: BigNumber.Value, tezValue: BigNumber.Value, opts?: OperationOptions): import("@taquito/taquito/dist/types/operations/types").TransferParams;
export declare function divestLiquidity(dex: Contract, shares: BigNumber.Value, tokenValueMin: BigNumber.Value, tezValueMin: BigNumber.Value, opts?: OperationOptions): import("@taquito/taquito/dist/types/operations/types").TransferParams;
export declare function vote(dex: Contract, voter: string, baker: string, shares: BigNumber.Value, opts?: OperationOptions): import("@taquito/taquito/dist/types/operations/types").TransferParams;
export declare function veto(dex: Contract, voter: string, shares: BigNumber.Value, opts?: OperationOptions): import("@taquito/taquito/dist/types/operations/types").TransferParams;
