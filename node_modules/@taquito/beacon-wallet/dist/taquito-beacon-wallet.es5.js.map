{"version":3,"file":"taquito-beacon-wallet.es5.js","sources":["../src/taquito-beacon-wallet.ts"],"sourcesContent":["/**\n * @packageDocumentation\n * @module @taquito/beacon-wallet\n */\n\nimport {\n  DAppClient,\n  DAppClientOptions,\n  RequestPermissionInput,\n  PermissionScope,\n} from '@airgap/beacon-sdk';\n\nimport {\n  createOriginationOperation,\n  createSetDelegateOperation,\n  createTransferOperation,\n  WalletDelegateParams,\n  WalletOriginateParams,\n  WalletProvider,\n  WalletTransferParams,\n} from '@taquito/taquito';\n\nexport class BeaconWalletNotInitialized implements Error {\n  name = 'BeaconWalletNotInitialized';\n  message = 'You need to initialize BeaconWallet by calling beaconWallet.requestPermissions first';\n}\n\nexport class MissingRequiredScopes implements Error {\n  name = 'MissingRequiredScopes';\n  message: string;\n\n  constructor(public requiredScopes: PermissionScope[]) {\n    this.message = `Required permissions scopes were not granted: ${requiredScopes.join(',')}`;\n  }\n}\n\nexport class BeaconWallet implements WalletProvider {\n  public client: DAppClient;\n\n  constructor(options: DAppClientOptions) {\n    this.client = new DAppClient(options);\n  }\n\n  private validateRequiredScopesOrFail(\n    permissionScopes: PermissionScope[],\n    requiredScopes: PermissionScope[]\n  ) {\n    const mandatoryScope = new Set(requiredScopes);\n\n    for (const scope of permissionScopes) {\n      if (mandatoryScope.has(scope)) {\n        mandatoryScope.delete(scope);\n      }\n    }\n\n    if (mandatoryScope.size > 0) {\n      throw new MissingRequiredScopes(Array.from(mandatoryScope));\n    }\n  }\n\n  async requestPermissions(request?: RequestPermissionInput) {\n    await this.client.requestPermissions(request);\n  }\n\n  private removeFeeAndLimit<T extends { gas_limit: any; storage_limit: any; fee: any }>(op: T) {\n    const { fee, gas_limit, storage_limit, ...rest } = op;\n    return rest;\n  }\n\n  async getPKH() {\n    const account = await this.client.getActiveAccount();\n    if (!account) {\n      throw new BeaconWalletNotInitialized();\n    }\n    return account.address;\n  }\n\n  mapTransferParamsToWalletParams(params: WalletTransferParams) {\n    return createTransferOperation(params);\n  }\n\n  mapOriginateParamsToWalletParams(params: WalletOriginateParams) {\n    return createOriginationOperation(params as any);\n  }\n\n  mapDelegateParamsToWalletParams(params: WalletDelegateParams) {\n    return createSetDelegateOperation(params as any);\n  }\n\n  async sendOperations(params: any[]) {\n    const account = await this.client.getActiveAccount();\n    if (!account) {\n      throw new BeaconWalletNotInitialized();\n    }\n    const permissions = account.scopes;\n    this.validateRequiredScopesOrFail(permissions, [PermissionScope.OPERATION_REQUEST]);\n\n    const { transactionHash } = await this.client.requestOperation({\n      operationDetails: params.map(op => ({\n        ...this.removeFeeAndLimit(op),\n      })) as any,\n    });\n    return transactionHash;\n  }\n \n  /**\n   * \n   * @description Removes all beacon values from the storage. After using this method, this instance is no longer usable. \n   * You will have to instanciate a new BeaconWallet.\n   */\n  async disconnect() {\n    await this.client.destroy();\n  }\n\n  /**\n   * \n   * @description This method removes the active account from local storage by setting it to undefined.\n   */\n  async clearActiveAccount() {\n    await this.client.setActiveAccount();\n  }\n}\n"],"names":[],"mappings":"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"}